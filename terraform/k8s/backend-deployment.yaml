apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: restaurant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: db-migrate-seed
          image: <ECR_BACKEND_IMAGE>:<TAG>
          imagePullPolicy: IfNotPresent
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: RestaurantCore.settings
            - name: SQLITE_PATH
              value: /data/db.sqlite3
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              cd /app
              python manage.py migrate --noinput
              if [ -f "menu/fixtures/initial_menu.json" ] && [ ! -f "/data/.seeded" ]; then
                echo "Seeding initial data...";
                if python manage.py loaddata initial_menu.json; then
                  touch /data/.seeded;
                else
                  echo "loaddata failed"; exit 1;
                fi
              fi
          volumeMounts:
            - name: sqlite-data
              mountPath: /data
      containers:
        - name: backend
          image: <ECR_BACKEND_IMAGE>:<TAG>
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: RestaurantCore.settings
            - name: SQLITE_PATH
              value: /data/db.sqlite3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 20
          volumeMounts:
            - name: sqlite-data
              mountPath: /data
      volumes:
        - name: sqlite-data
          persistentVolumeClaim:
            claimName: sqlite-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: restaurant
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
